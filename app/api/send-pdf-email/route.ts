import jsPDF from "jspdf";
import { type NextRequest, NextResponse } from "next/server";
import { Resend } from "resend";

const resend = new Resend(process.env.RESEND_API_KEY);

interface SendPDFEmailRequest {
  email: string;
  summary: {
    projectSummary: string;
    estimation: {
      timeframe: string;
      complexity: string;
      cost?: string;
      features: string[];
    };
    fullSummary: string;
  };
}

export async function POST(request: NextRequest) {
  try {
    const body: SendPDFEmailRequest = await request.json();

    const doc = new jsPDF();

    const primaryColor = [41, 128, 185] as [number, number, number];
    const textColor = [44, 62, 80] as [number, number, number];
    const margin = 20;
    let yPosition = margin;

    doc.setFontSize(24);
    doc.setTextColor(...primaryColor);
    doc.text("Project Estimation Report", margin, yPosition);
    yPosition += 15;

    doc.setFontSize(10);
    doc.setTextColor(...textColor);
    doc.text(
      `Generated on: ${new Date().toLocaleDateString()}`,
      margin,
      yPosition
    );
    yPosition += 15;

    doc.setFontSize(16);
    doc.setTextColor(...primaryColor);
    doc.text("Project Overview", margin, yPosition);
    yPosition += 10;

    doc.setFontSize(11);
    doc.setTextColor(...textColor);
    const summaryLines = doc.splitTextToSize(body.summary.projectSummary, 170);
    doc.text(summaryLines, margin, yPosition);
    yPosition += summaryLines.length * 7 + 10;

    doc.setFontSize(16);
    doc.setTextColor(...primaryColor);
    doc.text("Estimation Details", margin, yPosition);
    yPosition += 10;

    doc.setFontSize(11);
    doc.setTextColor(...textColor);

    doc.setFont("helvetica", "bold");
    doc.text("Complexity:", margin, yPosition);
    doc.setFont("helvetica", "normal");
    doc.text(body.summary.estimation.complexity, margin + 30, yPosition);
    yPosition += 8;

    doc.setFont("helvetica", "bold");
    doc.text("Timeframe:", margin, yPosition);
    doc.setFont("helvetica", "normal");
    doc.text(body.summary.estimation.timeframe, margin + 30, yPosition);
    yPosition += 8;

    if (body.summary.estimation.cost) {
      doc.setFont("helvetica", "bold");
      doc.text("Estimated Cost:", margin, yPosition);
      doc.setFont("helvetica", "normal");
      doc.text(body.summary.estimation.cost, margin + 40, yPosition);
      yPosition += 8;
    }

    yPosition += 5;

    doc.setFont("helvetica", "bold");
    doc.text("Key Features:", margin, yPosition);
    yPosition += 8;

    doc.setFont("helvetica", "normal");
    body.summary.estimation.features.forEach((feature, index) => {
      if (yPosition > 270) {
        doc.addPage();
        yPosition = margin;
      }

      const featureLines = doc.splitTextToSize(`${index + 1}. ${feature}`, 165);
      doc.text(featureLines, margin + 5, yPosition);
      yPosition += featureLines.length * 7 + 2;
    });

    yPosition += 10;

    if (yPosition > 240) {
      doc.addPage();
      yPosition = margin;
    }

    doc.setFontSize(16);
    doc.setTextColor(...primaryColor);
    doc.text("Detailed Summary", margin, yPosition);
    yPosition += 10;

    doc.setFontSize(11);
    doc.setTextColor(...textColor);
    const fullSummaryLines = doc.splitTextToSize(body.summary.fullSummary, 170);

    fullSummaryLines.forEach((line: string) => {
      if (yPosition > 280) {
        doc.addPage();
        yPosition = margin;
      }
      doc.text(line, margin, yPosition);
      yPosition += 7;
    });

    const pdfBase64 = doc.output("dataurlstring").split(",")[1];

    const fromEmail = process.env.RESEND_FROM_EMAIL;
    if (!fromEmail) {
      throw new Error("RESEND_FROM_EMAIL environment variable is not set");
    }

    await resend.emails.send({
      from: fromEmail,
      to: body.email,
      subject: "Your Project Estimation from PitchSpeak",
      html: `
        <div style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto;">
          <h1 style="color: #2980b9;">Your Project Estimation</h1>

          <p>Thank you for using PitchSpeak! Please find attached your detailed project estimation.</p>

          <div style="background: #f8f9fa; padding: 20px; border-radius: 8px; margin: 20px 0;">
            <h2 style="color: #2c3e50; margin-top: 0;">Quick Summary</h2>
            <p><strong>Complexity:</strong> ${body.summary.estimation.complexity}</p>
            <p><strong>Timeframe:</strong> ${body.summary.estimation.timeframe}</p>
            ${body.summary.estimation.cost ? `<p><strong>Cost:</strong> ${body.summary.estimation.cost}</p>` : ""}
          </div>

          <p>The full detailed estimation is attached as a PDF.</p>

          <p style="color: #7f8c8d; font-size: 12px; margin-top: 30px;">
            This estimation was generated by PitchSpeak AI. For questions, please contact us.
          </p>
        </div>
      `,
      attachments: [
        {
          filename: `project-estimation-${Date.now()}.pdf`,
          content: pdfBase64,
        },
      ],
    });

    return NextResponse.json({ success: true });
  } catch (error) {
    console.error("Error sending PDF email:", error);
    return NextResponse.json(
      { error: "Failed to send email" },
      { status: 500 }
    );
  }
}
